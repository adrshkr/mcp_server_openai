apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: mcp-server-openai
  namespace: default
  annotations:
    run.googleapis.com/ingress: all
    run.googleapis.com/execution-environment: gen2
    run.googleapis.com/cpu-throttling: "false"
spec:
  template:
    metadata:
      annotations:
        # Security: Use GCP Secret Manager for API keys
        run.googleapis.com/secrets/OPENAI_API_KEY: "openai-api-key:latest"
        run.googleapis.com/secrets/ANTHROPIC_API_KEY: "anthropic-api-key:latest"
        run.googleapis.com/secrets/GOOGLE_API_KEY: "google-api-key:latest"
        run.googleapis.com/secrets/UNSPLASH_ACCESS_KEY: "unsplash-access-key:latest"
        run.googleapis.com/secrets/UNSPLASH_SECRET_ACCESS_KEY: "unsplash-secret-key:latest"
        run.googleapis.com/secrets/PIXABAY_API_KEY: "pixabay-api-key:latest"
        
        # Performance: Optimize startup and scaling
        autoscaling.knative.dev/minScale: "1"
        autoscaling.knative.dev/maxScale: "100"
        run.googleapis.com/cpu-throttling: "false"
        run.googleapis.com/startup-cpu-boost: "true"
    spec:
      containerConcurrency: 80
      timeoutSeconds: 300
      serviceAccountName: mcp-server-sa
      containers:
      - name: mcp-server-openai
        image: gcr.io/PROJECT_ID/mcp-server-openai:latest
        ports:
        - name: http1
          containerPort: 8080
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "INFO"
        - name: PORT
          value: "8080"
        - name: ALLOWED_ORIGINS
          value: "https://your-domain.com"
        - name: MCP_CONFIG_PATH
          value: "/app/config"
        - name: MCP_MONITORING_ENABLED
          value: "true"
        - name: MCP_COST_HOURLY_MAX
          value: "10.0"
        - name: MCP_COST_DAILY_MAX
          value: "100.0"
        - name: MCP_COST_PER_REQUEST_MAX
          value: "1.0"
        - name: MCP_RATE_LIMITING_ENABLED
          value: "true"
        - name: MCP_REFRESH_INTERVAL
          value: "30.0"
        
        resources:
          limits:
            cpu: "2"
            memory: "2Gi"
          requests:
            cpu: "1"
            memory: "512Mi"
        
        # Comprehensive health checks for Cloud Run
        startupProbe:
          httpGet:
            path: /health/startup
            port: 8080
          initialDelaySeconds: 10
          timeoutSeconds: 10
          periodSeconds: 10
          failureThreshold: 3
        
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 5
          periodSeconds: 30
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
          periodSeconds: 10
          failureThreshold: 3
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: config-volume
        configMap:
          name: mcp-server-config
---
# ConfigMap for MCP server configuration files
apiVersion: v1
kind: ConfigMap
metadata:
  name: mcp-server-config
data:
  config.yaml: |
    # MCP Server OpenAI Configuration
    server:
      name: "mcp_server_openai"
      version: "0.2.0"
      description: "OpenAI MCP Server with comprehensive tooling"
    
    # LLM Provider Configuration
    llm_models:
      openai:
        default_model: "gpt-4o"
        max_tokens: 4000
        temperature: 0.1
        timeout: 60
      anthropic:
        default_model: "claude-3-5-sonnet-20241022"
        max_tokens: 4000
        temperature: 0.1
        timeout: 60
      google:
        default_model: "gemini-1.5-pro"
        max_tokens: 4000
        temperature: 0.1
        timeout: 60
    
    # API Configuration
    api:
      max_concurrent_requests: 10
      request_timeout: 300
      retry_attempts: 3
      retry_delay: 1.0
    
    # Content Generation Settings
    content:
      max_sections: 20
      min_sections: 3
      default_sections: 8
      max_images_per_section: 3
      enable_image_generation: true
      enable_web_research: true
    
    # Security Settings
    security:
      validate_api_keys: true
      secure_headers: true
      cors_origins: ["https://your-domain.com"]
      rate_limiting: true
    
    # Monitoring Configuration
    monitoring:
      enabled: true
      metrics_endpoint: "/metrics"
      health_check_interval: 30
      log_level: "INFO"
---
# Secret for API keys
apiVersion: v1
kind: Secret
metadata:
  name: api-keys
type: Opaque
data:
  openai-api-key: <base64-encoded-openai-key>
  anthropic-api-key: <base64-encoded-anthropic-key>
  google-api-key: <base64-encoded-google-key>

