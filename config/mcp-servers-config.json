{
  "mcpServers": {
    "github": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-github"
      ],
      "env": {
        "GITHUB_PERSONAL_ACCESS_TOKEN": "${GITHUB_TOKEN}"
      },
      "description": "GitHub repository management, issues, PRs",
      "capabilities": ["repository_management", "issue_tracking", "pull_requests"],
      "status": "installed"
    },
    "filesystem": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-filesystem",
        "/mnt/c/Users/adars/PycharmProjects/PythonProject"
      ],
      "description": "Secure file operations with access controls",
      "capabilities": ["file_operations", "directory_management", "secure_access"],
      "status": "installed"
    },
    "memory": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-memory"
      ],
      "description": "Knowledge graph-based persistent memory",
      "capabilities": ["knowledge_storage", "graph_operations", "persistent_memory"],
      "status": "installed"
    },
    "postgresql": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-postgres"
      ],
      "env": {
        "POSTGRES_URL": "${POSTGRES_URL}"
      },
      "description": "PostgreSQL database operations",
      "capabilities": ["database_operations", "schema_management", "queries"],
      "status": "installed"
    },
    "database": {
      "command": "npx",
      "args": [
        "-y",
        "@executeautomation/database-server"
      ],
      "description": "Multi-database server (SQLite, PostgreSQL, SQL Server)",
      "capabilities": ["sqlite", "postgresql", "sqlserver", "multi_database"],
      "status": "installed"
    },
    "sequential_thinking": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-sequential-thinking"
      ],
      "description": "Dynamic problem-solving through thought sequences",
      "capabilities": ["structured_thinking", "problem_solving", "analysis"],
      "status": "project_integrated"
    },
    "brave_search": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-brave-search"
      ],
      "env": {
        "BRAVE_SEARCH_API_KEY": "${BRAVE_SEARCH_API_KEY}"
      },
      "description": "Web search integration with Brave Search API",
      "capabilities": ["web_search", "research", "content_enhancement"],
      "status": "project_integrated"
    }
  },
  "expansion_roadmap": {
    "phase_2": {
      "gdrive": {
        "command": "npx",
        "args": ["-y", "@modelcontextprotocol/server-gdrive"],
        "description": "Google Drive integration",
        "priority": "high"
      },
      "slack": {
        "command": "npx",
        "args": ["-y", "@modelcontextprotocol/server-slack"],
        "description": "Slack integration via ActionKit",
        "priority": "medium"
      },
      "docker": {
        "command": "npx",
        "args": ["-y", "@docker/mcp-servers"],
        "description": "Docker container management",
        "priority": "high"
      }
    },
    "phase_3": {
      "aws": {
        "description": "AWS resource management",
        "status": "community_server_needed",
        "priority": "high"
      },
      "kubernetes": {
        "description": "Kubernetes cluster management",
        "status": "custom_implementation_needed",
        "priority": "medium"
      },
      "security": {
        "description": "Security scanning and analysis",
        "status": "custom_implementation_needed",
        "priority": "high"
      }
    }
  },
  "installation_log": {
    "date": "2025-08-22",
    "installed_count": 6,
    "total_available": 70,
    "next_phase": "phase_2_cloud_integration"
  }
}
