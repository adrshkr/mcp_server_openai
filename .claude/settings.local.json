{
  "permissions": {
    "allow": [
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(claude mcp:*)",
      "WebSearch",
      "Bash(npm install:*)",
      "Bash(git checkout:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(gh pr create:*)",
      "Bash(python -m pytest tests/test_logging_utils.py -v)",
      "Bash(python -m pytest tests/test_logging_utils.py::test_backwards_compatibility -v)",
      "Bash(python -m pytest tests/test_web_tools.py -v -k \"test_fetch_url_content_real_network\")",
      "Bash(python -m pytest tests/test_web_tools.py -v -x)",
      "Bash(make:*)",
      "Bash(uv run:*)",
      "Bash(git add:*)",
      "Bash(uv add:*)",
      "Bash(uv sync:*)",
      "Bash(uv pip install:*)",
      "Bash(python -m pytest tests/test_streaming_http.py::TestEnhancedSSE::test_enhanced_sse_basic -v --timeout=30)",
      "Bash(timeout 30 python -m pytest tests/test_streaming_http.py::TestEnhancedSSE::test_enhanced_sse_basic -v)",
      "Bash(timeout 15 python -m pytest tests/test_streaming_http.py::TestEnhancedEndpoints::test_enhanced_health -v)",
      "Bash(timeout 15 python -m pytest tests/test_streaming_http.py::TestEnhancedSSE::test_enhanced_sse_basic -v)",
      "Bash(timeout 10 python -m pytest:*)",
      "Bash(python -m pytest tests/test_streaming_http.py::TestEnhancedSSE::test_enhanced_sse_basic -v)",
      "Bash(python -m pytest tests/test_streaming_http.py::TestEnhancedSSE -v)",
      "Bash(python -m pytest tests/test_streaming_http.py::TestEnhancedEndpoints -v)",
      "Bash(python -m pytest tests/test_streaming_http.py -v --tb=short)",
      "Bash(python -m pytest tests/test_streaming_http.py::TestStreamingResponses::test_streaming_data_endpoint tests/test_streaming_http.py::TestSecurityFeatures::test_cors_headers -v)",
      "Bash(python -m pytest tests/test_streaming_http.py --tb=short -q)",
      "Bash(python:*)",
      "Bash(python -m pytest tests/test_monitoring.py -v)",
      "Bash(if [ -d \"$HOME/.claude\" ])",
      "Bash(then echo \"Found ~/.claude\")",
      "Bash(ls:*)",
      "Bash(else echo \"~/.claude not found\")",
      "Bash(fi)",
      "Bash(if [ -d \"$HOME/.config/claude\" ])",
      "Bash(then echo \"Found ~/.config/claude\")",
      "Bash(else echo \"~/.config/claude not found\")",
      "Bash(ccusage --version)",
      "Bash(ccusage statusline)",
      "Bash(ccusage daily:*)",
      "Bash(chmod:*)",
      "Bash(rm:*)",
      "Bash(cp:*)",
      "Bash(~/.claude/statusline-manager.sh test:*)",
      "Bash(ccusage --help)",
      "Bash(ccusage blocks:*)",
      "Bash(echo $PATH)",
      "Bash(unset PYTHONPATH)",
      "Bash(grep:*)",
      "Bash(env)",
      "Bash(echo:*)",
      "Bash(claude --mcp-config .mcp.json --help)",
      "Bash(npx @modelcontextprotocol/server-memory:*)",
      "Bash(timeout 3s npx @cyanheads/git-mcp-server --help)",
      "Bash(npm search:*)",
      "Bash(claude:*)",
      "Bash(timeout 3s npx @modelcontextprotocol/server-sequential-thinking --help)",
      "Bash(npx @modelcontextprotocol/server-brave-search:*)",
      "Bash(npx @modelcontextprotocol/server-filesystem:*)",
      "WebFetch(domain:github.com)",
      "Bash(timeout 5s npx @modelcontextprotocol/server-filesystem \"/c/Users/adars/PycharmProjects\")",
      "Bash(timeout 5s npx @playwright/mcp --help)",
      "Bash(timeout 5s npx mcp-code-graph --help)",
      "Bash(timeout 5s npx @thelord/mcp-server-docker-npx --help)",
      "Bash(timeout 5s npx @bytebase/dbhub --help)"
    ],
    "deny": [],
    "ask": [],
    "defaultMode": "bypassPermissions",
    "additionalDirectories": [
      "/c/Users/adars/PycharmProjects/PythonProject",
      "/c/Users/adars/PycharmProjects",
      "/c/Users/adars/.claude/projects",
      "/c/Users/adars/.claude"
    ]
  },
  "outputStyle": "default"
}