# ðŸš€ Unified Content Creator System - Production Dockerfile
# Multi-stage build for optimized production deployment

# Stage 1: Base Python environment
FROM python:3.11-slim as base

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    DEBIAN_FRONTEND=noninteractive

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    git \
    build-essential \
    libffi-dev \
    libssl-dev \
    pandoc \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Stage 2: Development dependencies (for testing)
FROM base as development

# Install development dependencies
COPY requirements-dev.txt .
RUN pip install --no-cache-dir -r requirements-dev.txt

# Install additional tools for development
RUN apt-get update && apt-get install -y \
    vim \
    htop \
    && rm -rf /var/lib/apt/lists/*

# Stage 3: Production build
FROM base as production

# Create non-root user
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Create necessary directories
RUN mkdir -p /app/output /app/data /app/logs /app/templates /app/cache \
    && chown -R appuser:appuser /app

# Copy application code
COPY --chown=appuser:appuser src/ /app/src/
COPY --chown=appuser:appuser config/ /app/config/
COPY --chown=appuser:appuser templates/ /app/templates/

# Copy configuration files
COPY --chown=appuser:appuser config/unified_system_complete.yaml /app/config/
COPY --chown=appuser:appuser .env.example /app/.env

# Set proper permissions
RUN chmod +x /app/src/mcp_server_openai/streaming_http.py

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Default command
CMD ["python", "-m", "uvicorn", "src.mcp_server_openai.streaming_http:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4"]

# Stage 4: Testing (optional)
FROM development as testing

# Copy test files
COPY --chown=appuser:appuser tests/ /app/tests/
COPY --chown=appuser:appuser scripts/ /app/scripts/

# Install testing dependencies
RUN pip install --no-cache-dir pytest pytest-asyncio pytest-cov pytest-mock

# Set test environment
ENV TESTING=true
ENV PYTHONPATH=/app

# Test command
CMD ["pytest", "tests/", "-v", "--cov=src", "--cov-report=html", "--cov-report=term"]
